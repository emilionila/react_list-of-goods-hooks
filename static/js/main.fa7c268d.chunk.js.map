{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortFieldType","goodsFromServer","App","useState","sortField","setSortField","isReversed","setIsReversed","visibleProducts","products","reversed","sortedProducts","sort","product1","product2","sortAlphabetically","localeCompare","sortByLength","length","sortByDefault","reverse","sortProducts","className","type","cn","onClick","reverseField","map","product","ReactDOM","render","document","getElementById"],"mappings":"6KAmBYA,E,0EAbCC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGUD,K,wCAAAA,E,4BAAAA,E,+BAAAA,M,KAMZ,IA8BaE,EAAgB,WAC3B,MAAkCC,mBAAiB,IAAnD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAoCF,oBAAkB,GAAtD,mBAAOG,EAAP,KAAmBC,EAAnB,KAEMC,EAlCa,SACnBC,EACAL,EACAM,GAEA,IAAMC,EAAc,YAAOF,GAsB3B,OApBIL,GACFO,EAAeC,MAAK,SAACC,EAAUC,GAC7B,OAAQV,GACN,KAAKJ,EAAce,mBACjB,OAAOF,EAASG,cAAcF,GAEhC,KAAKd,EAAciB,aACjB,OAAOJ,EAASK,OAASJ,EAASI,OAEpC,KAAKlB,EAAcmB,cACnB,QACE,OAAO,MAKXT,GACFC,EAAeS,UAGVT,EAQHU,CAAapB,EAAiBG,EAA4BE,GAO9D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBACZ,CAAE,WAAYpB,IAAcJ,EAAce,qBAC5CU,QAAS,kBAAMpB,EAAaL,EAAce,qBAJ5C,iCASA,wBACEQ,KAAK,SACLD,UAAWE,IAAG,oBACZ,CAAE,WAAYpB,IAAcJ,EAAciB,eAC5CQ,QAAS,kBAAMpB,EAAaL,EAAciB,eAJ5C,4BASA,wBACEM,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CAAE,YAAalB,IAClDmB,QAAS,kBAAMlB,GAAc,SAAAmB,GAAY,OAAKA,MAHhD,qBAQCtB,GAAaE,EACZ,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAtCW,WACnBpB,EAAa,IACbE,GAAc,IAiCR,mBAQE,QAGN,6BACGC,EAAgBmB,KAAI,SAAAC,GAAO,OAC1B,oBAAI,UAAQ,OAAZ,SAAkCA,GAAVA,YC3GlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fa7c268d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nexport enum SortFieldType {\n  sortAlphabetically = 'sortAlphabetically',\n  sortByLength = 'sortByLength',\n  sortByDefault = 'sortByDefault',\n}\n\nconst sortProducts = (\n  products: string[],\n  sortField: SortFieldType,\n  reversed: boolean,\n) => {\n  const sortedProducts = [...products];\n\n  if (sortField) {\n    sortedProducts.sort((product1, product2) => {\n      switch (sortField) {\n        case SortFieldType.sortAlphabetically:\n          return product1.localeCompare(product2);\n\n        case SortFieldType.sortByLength:\n          return product1.length - product2.length;\n\n        case SortFieldType.sortByDefault:\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    sortedProducts.reverse();\n  }\n\n  return sortedProducts;\n};\n\nexport const App: React.FC = () => {\n  const [sortField, setSortField] = useState<string>('');\n  const [isReversed, setIsReversed] = useState<boolean>(false);\n\n  const visibleProducts\n    = sortProducts(goodsFromServer, sortField as SortFieldType, isReversed);\n\n  const resetSorting = () => {\n    setSortField('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SortFieldType.sortAlphabetically })}\n          onClick={() => setSortField(SortFieldType.sortAlphabetically)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SortFieldType.sortByLength })}\n          onClick={() => setSortField(SortFieldType.sortByLength)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReversed })}\n          onClick={() => setIsReversed(reverseField => !reverseField)}\n        >\n          Reverse\n        </button>\n\n        {sortField || isReversed ? (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )\n          : null}\n      </div>\n\n      <ul>\n        {visibleProducts.map(product => (\n          <li data-cy=\"Good\" key={product}>{product}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}